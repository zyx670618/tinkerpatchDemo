apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"  // 使用SDK中编译工具的版本
    defaultConfig {
        applicationId "com.example.ml.tinkerpatchdemo"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {  //这里配置的就是release的签名配置了
            storeFile file('C:\\Users\\ML\\Desktop\\sinosoft.keystore') // 签名文件相对路径
            storePassword "sinosoft" // 签名的密码
            keyAlias "sinosoft" // 别名
            keyPassword "sinosoft" // 别名密码
        }
        debug {
            storeFile file('C:\\Users\\ML\\Desktop\\sinosoft.keystore')
            storePassword "sinosoft"
            keyAlias "sinosoft"
            keyPassword "sinosoft"
        }
    }

    /**
     * 编译类型配置
     */
    buildTypes {
        release {
            minifyEnabled true  // 在混淆时去除代码中无用的内容
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), project.file('proguard-rules.pro')
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

}

dependencies {
    androidTestCompile('com.android.support:support-annotations:26.1.0') {
        force = true
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //无需引入tinker的任何库,使用tinkerpatch sdk即可
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") {
        changing = true
    }
}

apply from: 'tinkerpatch.gradle'

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}